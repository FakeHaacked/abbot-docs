### YamlMime:ManagedReference
items:
- uid: Serious.Abbot.Scripting.ICoordinate
  commentId: T:Serious.Abbot.Scripting.ICoordinate
  id: ICoordinate
  parent: Serious.Abbot.Scripting
  children:
  - Serious.Abbot.Scripting.ICoordinate.Deconstruct(System.Double@,System.Double@)
  - Serious.Abbot.Scripting.ICoordinate.Latitude
  - Serious.Abbot.Scripting.ICoordinate.Longitude
  langs:
  - csharp
  - vb
  name: ICoordinate
  nameWithType: ICoordinate
  fullName: Serious.Abbot.Scripting.ICoordinate
  type: Interface
  source:
    remote:
      path: src/Abbot.Scripting.Interfaces/Utilities/ICoordinate.cs
      branch: docs
      repo: https://github.com/aseriousbiz/abbot.git
    id: ICoordinate
    path: ../../src/Abbot.Scripting.Interfaces/Utilities/ICoordinate.cs
    startLine: 5
  assemblies:
  - Abbot.Scripting.Interfaces
  namespace: Serious.Abbot.Scripting
  summary: "\nRepresents a geographic coordinate.\n"
  example: []
  syntax:
    content: public interface ICoordinate
    content.vb: Public Interface ICoordinate
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Serious.Abbot.Scripting.ICoordinate.Latitude
  commentId: P:Serious.Abbot.Scripting.ICoordinate.Latitude
  id: Latitude
  parent: Serious.Abbot.Scripting.ICoordinate
  langs:
  - csharp
  - vb
  name: Latitude
  nameWithType: ICoordinate.Latitude
  fullName: Serious.Abbot.Scripting.ICoordinate.Latitude
  type: Property
  source:
    remote:
      path: src/Abbot.Scripting.Interfaces/Utilities/ICoordinate.cs
      branch: docs
      repo: https://github.com/aseriousbiz/abbot.git
    id: Latitude
    path: ../../src/Abbot.Scripting.Interfaces/Utilities/ICoordinate.cs
    startLine: 10
  assemblies:
  - Abbot.Scripting.Interfaces
  namespace: Serious.Abbot.Scripting
  summary: "\nThe latitude. Those are the lines that are the belt of the earth.\n"
  example: []
  syntax:
    content: double Latitude { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Property Latitude As Double
  overload: Serious.Abbot.Scripting.ICoordinate.Latitude*
  modifiers.csharp:
  - get
  - set
- uid: Serious.Abbot.Scripting.ICoordinate.Longitude
  commentId: P:Serious.Abbot.Scripting.ICoordinate.Longitude
  id: Longitude
  parent: Serious.Abbot.Scripting.ICoordinate
  langs:
  - csharp
  - vb
  name: Longitude
  nameWithType: ICoordinate.Longitude
  fullName: Serious.Abbot.Scripting.ICoordinate.Longitude
  type: Property
  source:
    remote:
      path: src/Abbot.Scripting.Interfaces/Utilities/ICoordinate.cs
      branch: docs
      repo: https://github.com/aseriousbiz/abbot.git
    id: Longitude
    path: ../../src/Abbot.Scripting.Interfaces/Utilities/ICoordinate.cs
    startLine: 15
  assemblies:
  - Abbot.Scripting.Interfaces
  namespace: Serious.Abbot.Scripting
  summary: "\nThe longitude. Those are the pin stripes of the earth.\n"
  example: []
  syntax:
    content: double Longitude { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Property Longitude As Double
  overload: Serious.Abbot.Scripting.ICoordinate.Longitude*
  modifiers.csharp:
  - get
  - set
- uid: Serious.Abbot.Scripting.ICoordinate.Deconstruct(System.Double@,System.Double@)
  commentId: M:Serious.Abbot.Scripting.ICoordinate.Deconstruct(System.Double@,System.Double@)
  id: Deconstruct(System.Double@,System.Double@)
  parent: Serious.Abbot.Scripting.ICoordinate
  langs:
  - csharp
  - vb
  name: Deconstruct(out Double, out Double)
  nameWithType: ICoordinate.Deconstruct(out Double, out Double)
  fullName: Serious.Abbot.Scripting.ICoordinate.Deconstruct(out System.Double, out System.Double)
  type: Method
  source:
    remote:
      path: src/Abbot.Scripting.Interfaces/Utilities/ICoordinate.cs
      branch: docs
      repo: https://github.com/aseriousbiz/abbot.git
    id: Deconstruct
    path: ../../src/Abbot.Scripting.Interfaces/Utilities/ICoordinate.cs
    startLine: 22
  assemblies:
  - Abbot.Scripting.Interfaces
  namespace: Serious.Abbot.Scripting
  summary: "\nDeconstructs a coordinate into its latitude and longitude.\n"
  example: []
  syntax:
    content: void Deconstruct(out double latitude, out double longitude)
    parameters:
    - id: latitude
      type: System.Double
      description: The latitude.
    - id: longitude
      type: System.Double
      description: The longitude.
    content.vb: Sub Deconstruct(ByRef latitude As Double, ByRef longitude As Double)
  overload: Serious.Abbot.Scripting.ICoordinate.Deconstruct*
  nameWithType.vb: ICoordinate.Deconstruct(ByRef Double, ByRef Double)
  fullName.vb: Serious.Abbot.Scripting.ICoordinate.Deconstruct(ByRef System.Double, ByRef System.Double)
  name.vb: Deconstruct(ByRef Double, ByRef Double)
references:
- uid: Serious.Abbot.Scripting
  commentId: N:Serious.Abbot.Scripting
  name: Serious.Abbot.Scripting
  nameWithType: Serious.Abbot.Scripting
  fullName: Serious.Abbot.Scripting
- uid: Serious.Abbot.Scripting.ICoordinate.Latitude*
  commentId: Overload:Serious.Abbot.Scripting.ICoordinate.Latitude
  name: Latitude
  nameWithType: ICoordinate.Latitude
  fullName: Serious.Abbot.Scripting.ICoordinate.Latitude
- uid: System.Double
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Serious.Abbot.Scripting.ICoordinate.Longitude*
  commentId: Overload:Serious.Abbot.Scripting.ICoordinate.Longitude
  name: Longitude
  nameWithType: ICoordinate.Longitude
  fullName: Serious.Abbot.Scripting.ICoordinate.Longitude
- uid: Serious.Abbot.Scripting.ICoordinate.Deconstruct*
  commentId: Overload:Serious.Abbot.Scripting.ICoordinate.Deconstruct
  name: Deconstruct
  nameWithType: ICoordinate.Deconstruct
  fullName: Serious.Abbot.Scripting.ICoordinate.Deconstruct
