### YamlMime:ManagedReference
items:
- uid: Serious.Abbot.Scripting.ChatUserExtensions
  commentId: T:Serious.Abbot.Scripting.ChatUserExtensions
  id: ChatUserExtensions
  parent: Serious.Abbot.Scripting
  children:
  - Serious.Abbot.Scripting.ChatUserExtensions.GetLocalTime(Serious.Abbot.Scripting.IChatUser)
  langs:
  - csharp
  - vb
  name: ChatUserExtensions
  nameWithType: ChatUserExtensions
  fullName: Serious.Abbot.Scripting.ChatUserExtensions
  type: Class
  source:
    remote:
      path: src/Abbot.Scripting.Interfaces/Extensions/ChatUserExtensions.cs
      branch: docs
      repo: https://github.com/aseriousbiz/abbot.git
    id: ChatUserExtensions
    path: ../../src/Abbot.Scripting.Interfaces/Extensions/ChatUserExtensions.cs
    startLine: 7
  assemblies:
  - Abbot.Scripting.Interfaces
  namespace: Serious.Abbot.Scripting
  summary: "\nUseful extensions to the <xref href=\"Serious.Abbot.Scripting.IChatUser\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public static class ChatUserExtensions : object'
    content.vb: >-
      Public Module ChatUserExtensions

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Serious.Abbot.Scripting.ChatUserExtensions.GetLocalTime(Serious.Abbot.Scripting.IChatUser)
  commentId: M:Serious.Abbot.Scripting.ChatUserExtensions.GetLocalTime(Serious.Abbot.Scripting.IChatUser)
  id: GetLocalTime(Serious.Abbot.Scripting.IChatUser)
  isExtensionMethod: true
  parent: Serious.Abbot.Scripting.ChatUserExtensions
  langs:
  - csharp
  - vb
  name: GetLocalTime(IChatUser)
  nameWithType: ChatUserExtensions.GetLocalTime(IChatUser)
  fullName: Serious.Abbot.Scripting.ChatUserExtensions.GetLocalTime(Serious.Abbot.Scripting.IChatUser)
  type: Method
  source:
    remote:
      path: src/Abbot.Scripting.Interfaces/Extensions/ChatUserExtensions.cs
      branch: docs
      repo: https://github.com/aseriousbiz/abbot.git
    id: GetLocalTime
    path: ../../src/Abbot.Scripting.Interfaces/Extensions/ChatUserExtensions.cs
    startLine: 14
  assemblies:
  - Abbot.Scripting.Interfaces
  namespace: Serious.Abbot.Scripting
  summary: "\nRetrieve the current local time for the chat user.\n"
  example: []
  syntax:
    content: public static LocalTime? GetLocalTime(this IChatUser chatUser)
    parameters:
    - id: chatUser
      type: Serious.Abbot.Scripting.IChatUser
      description: The user.
    return:
      type: System.Nullable{LocalTime}
      description: The local time if the timezone is known, otherwise returns null.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetLocalTime(chatUser As IChatUser) As LocalTime?
  overload: Serious.Abbot.Scripting.ChatUserExtensions.GetLocalTime*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Serious.Abbot.Scripting.IChatUser
  commentId: T:Serious.Abbot.Scripting.IChatUser
  parent: Serious.Abbot.Scripting
  name: IChatUser
  nameWithType: IChatUser
  fullName: Serious.Abbot.Scripting.IChatUser
- uid: Serious.Abbot.Scripting
  commentId: N:Serious.Abbot.Scripting
  name: Serious.Abbot.Scripting
  nameWithType: Serious.Abbot.Scripting
  fullName: Serious.Abbot.Scripting
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Serious.Abbot.Scripting.ChatUserExtensions.GetLocalTime*
  commentId: Overload:Serious.Abbot.Scripting.ChatUserExtensions.GetLocalTime
  name: GetLocalTime
  nameWithType: ChatUserExtensions.GetLocalTime
  fullName: Serious.Abbot.Scripting.ChatUserExtensions.GetLocalTime
- uid: System.Nullable{LocalTime}
  commentId: '!:System.Nullable{LocalTime}'
  definition: System.Nullable`1
  name: Nullable<LocalTime>
  nameWithType: Nullable<LocalTime>
  fullName: System.Nullable<LocalTime>
  nameWithType.vb: Nullable(Of LocalTime)
  fullName.vb: System.Nullable(Of LocalTime)
  name.vb: Nullable(Of LocalTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: LocalTime
    name: LocalTime
    nameWithType: LocalTime
    fullName: LocalTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: LocalTime
    name: LocalTime
    nameWithType: LocalTime
    fullName: LocalTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
