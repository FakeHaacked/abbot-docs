### YamlMime:ManagedReference
items:
- uid: Serious.Abbot.Scripting.IVersionInfo
  commentId: T:Serious.Abbot.Scripting.IVersionInfo
  id: IVersionInfo
  parent: Serious.Abbot.Scripting
  children:
  - Serious.Abbot.Scripting.IVersionInfo.ApiVersion
  - Serious.Abbot.Scripting.IVersionInfo.ProductVersion
  langs:
  - csharp
  - vb
  name: IVersionInfo
  nameWithType: IVersionInfo
  fullName: Serious.Abbot.Scripting.IVersionInfo
  type: Interface
  source:
    remote:
      path: src/Abbot.Scripting.Interfaces/IVersionInfo.cs
      branch: docs
      repo: https://github.com/aseriousbiz/abbot.git
    id: IVersionInfo
    path: ../../abbot/src/Abbot.Scripting.Interfaces/IVersionInfo.cs
    startLine: 7
  assemblies:
  - Abbot.Scripting.Interfaces
  namespace: Serious.Abbot.Scripting
  summary: "\nProvides info about Abbot.\n"
  example: []
  syntax:
    content: public interface IVersionInfo
    content.vb: Public Interface IVersionInfo
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Serious.Abbot.Scripting.IVersionInfo.ProductVersion
  commentId: P:Serious.Abbot.Scripting.IVersionInfo.ProductVersion
  id: ProductVersion
  parent: Serious.Abbot.Scripting.IVersionInfo
  langs:
  - csharp
  - vb
  name: ProductVersion
  nameWithType: IVersionInfo.ProductVersion
  fullName: Serious.Abbot.Scripting.IVersionInfo.ProductVersion
  type: Property
  source:
    remote:
      path: src/Abbot.Scripting.Interfaces/IVersionInfo.cs
      branch: docs
      repo: https://github.com/aseriousbiz/abbot.git
    id: ProductVersion
    path: ../../abbot/src/Abbot.Scripting.Interfaces/IVersionInfo.cs
    startLine: 12
  assemblies:
  - Abbot.Scripting.Interfaces
  namespace: Serious.Abbot.Scripting
  summary: "\nThe current version of the Abbot Product.\n"
  example: []
  syntax:
    content: string ProductVersion { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ProductVersion As String
  overload: Serious.Abbot.Scripting.IVersionInfo.ProductVersion*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Serious.Abbot.Scripting.IVersionInfo.ApiVersion
  commentId: P:Serious.Abbot.Scripting.IVersionInfo.ApiVersion
  id: ApiVersion
  parent: Serious.Abbot.Scripting.IVersionInfo
  langs:
  - csharp
  - vb
  name: ApiVersion
  nameWithType: IVersionInfo.ApiVersion
  fullName: Serious.Abbot.Scripting.IVersionInfo.ApiVersion
  type: Property
  source:
    remote:
      path: src/Abbot.Scripting.Interfaces/IVersionInfo.cs
      branch: docs
      repo: https://github.com/aseriousbiz/abbot.git
    id: ApiVersion
    path: ../../abbot/src/Abbot.Scripting.Interfaces/IVersionInfo.cs
    startLine: 17
  assemblies:
  - Abbot.Scripting.Interfaces
  namespace: Serious.Abbot.Scripting
  summary: "\nThe version of the API that a skill is compiled against.\n"
  example: []
  syntax:
    content: Version ApiVersion { get; }
    parameters: []
    return:
      type: Version
    content.vb: ReadOnly Property ApiVersion As Version
  overload: Serious.Abbot.Scripting.IVersionInfo.ApiVersion*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: Serious.Abbot.Scripting
  commentId: N:Serious.Abbot.Scripting
  name: Serious.Abbot.Scripting
  nameWithType: Serious.Abbot.Scripting
  fullName: Serious.Abbot.Scripting
- uid: Serious.Abbot.Scripting.IVersionInfo.ProductVersion*
  commentId: Overload:Serious.Abbot.Scripting.IVersionInfo.ProductVersion
  name: ProductVersion
  nameWithType: IVersionInfo.ProductVersion
  fullName: Serious.Abbot.Scripting.IVersionInfo.ProductVersion
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Serious.Abbot.Scripting.IVersionInfo.ApiVersion*
  commentId: Overload:Serious.Abbot.Scripting.IVersionInfo.ApiVersion
  name: ApiVersion
  nameWithType: IVersionInfo.ApiVersion
  fullName: Serious.Abbot.Scripting.IVersionInfo.ApiVersion
- uid: Version
  commentId: '!:Version'
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: Version
